[Unit]
Description = Spark historyserver
After = syslog.target network.target remote-fs.target <%= @deps %>
#restart every 5s and at most 121 times in 11min to guaranty that it will restart for at least 10min (120*5s)
StartLimitIntervalSec=660
<% if node['hops']['alive-watchdog']['enabled'].casecmp?("true") -%>
# Do not be very strict as it is normal for the service to fail and restart immediatelly
# when liveness watchdog is enabled
StartLimitBurst=350
<% else -%>
StartLimitBurst=18
<% end -%>

[Service]
User = <%= node['hops']['hdfs']['user'] %>
PIDFile = <%= node['hadoop_spark']['daemon_pid_dir'] %>/spark-<%= node['hops']['hdfs']['user'] %>-org.apache.spark.deploy.history.HistoryServer-1.pid
ExecStart = <%= node['hadoop_spark']['base_dir'] %>/sbin/start-history-server.sh
ExecStop = <%= node['hadoop_spark']['base_dir'] %>/sbin/stop-history-server.sh
LimitNOFILE = 50000
Type = forking
Restart=on-failure
RestartSec=5

[Install]
WantedBy = multi-user.target
