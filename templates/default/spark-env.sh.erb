#!/usr/bin/env bash

# This file is sourced when running various Spark programs.
# Copy it as.hops.spark.env.sh and edit that to configure Spark for your site.

export SPARK_HOME=<%= node['hadoop_spark']['base_dir'] %>
#export SCALA_HOME=

#export SPARK_JAR=

# Options read when launching programs locally with
# ./bin/run-example or ./bin.hops.spark.submit
export HADOOP_CONF_DIR=<%= node['hops']['conf_dir'] %>
export SPARK_LOCAL_IP=0.0.0.0

# https://spark.apache.org/docs/latest/hadoop-provided.html
# Need to tell spark where to find the hadoop jars
export SPARK_DIST_CLASSPATH=$(<%= node['hops']['base_dir'] %>/bin/hadoop classpath):<%= node['hadoop_spark']['hopsworks_jars'] %>/*

export SPARK_DAEMON_MEMORY=<%= node['hadoop_spark']['daemon']['memory'] %>

# export SPARK_PUBLIC_DNS, to set the public dns name of the driver program
# export SPARK_CLASSPATH, default classpath entries to append

# Options read by executors and drivers running inside the cluster
# export SPARK_LOCAL_IP, to set the IP address Spark binds to on this node
# export SPARK_PUBLIC_DNS, to set the public DNS name of the driver program
# export SPARK_CLASSPATH, default classpath entries to append
# export SPARK_LOCAL_DIRS, storage directories to use on this node for shuffle and RDD data
# export MESOS_NATIVE_LIBRARY, to point to your libmesos.so if you use Mesos

# Options read in YARN client mode
# export HADOOP_CONF_DIR, to point Spark towards Hadoop configuration files
# export SPARK_EXECUTOR_INSTANCES, Number of workers to start (Default: 2)
# export SPARK_EXECUTOR_CORES, Number of cores for the workers (Default: 1).
# export SPARK_EXECUTOR_MEMORY, Memory per Worker (e.g. 1000M, 2G) (Default: 1G)
# export SPARK_DRIVER_MEMORY, Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)
# export SPARK_YARN_APP_NAME, The name of your application (Default: Spark)
# export SPARK_YARN_QUEUE, The.hops.queue to use for allocation requests (Default: ‘default’)
# export SPARK_YARN_DIST_FILES, Comma separated list of files to be distributed with the job.
# export SPARK_YARN_DIST_ARCHIVES, Comma separated list of archives to be distributed with the job.




# Options for the daemons used in the standalone deploy mode
export SPARK_MASTER_IP=yarn
export SPARK_MASTER_PORT=<%= node['hadoop_spark']['master']['port'] %>
#export SPARK_MASTER_WEBUI_PORT, to use non-default ports for the master
# export SPARK_MASTER_OPTS, to set config properties only for the master (e.g. "-Dx=y")
# export SPARK_WORKER_CORES
# export SPARK_WORKER_MEMORY, to set how much total memory workers have to give executors (e.g. 1000m, 2g)
# / SPARK_WORKER_PORT, to use non-default ports for the worker
# export SPARK_WORKER_INSTANCES, to set the number of worker processes per node
# export SPARK_WORKER_DIR, to set the working directory of worker processes
# export SPARK_WORKER_OPTS, to set config properties only for the worker (e.g. "-Dx=y")
# export SPARK_HISTORY_OPTS, to set config properties only for the history server (e.g. "-Dx=y")
# export SPARK_DAEMON_JAVA_OPTS, to set config properties for all daemons (e.g. "-Dx=y")
# export SPARK_PUBLIC_DNS, to set the public dns name of the master or workers

# Generic options for the daemons used in the standalone deploy mode
# export SPARK_CONF_DIR      Alternate conf dir. (Default: ${SPARK_HOME}/conf)
# export SPARK_LOG_DIR       Where log files are stored.  (Default: ${SPARK_HOME}/logs)
export SPARK_PID_DIR=<%= node['hadoop_spark']['daemon_pid_dir'] %>       # Where the pid file is stored. (Default: /tmp)
# export SPARK_IDENT_STRING  A string representing this instance of.hops.spark. (Default: $USER)
# export SPARK_NICENESS      The scheduling priority for daemons. (Default: 0)

export PYSPARK_ARCHIVES_PATH=local://<%= node['hadoop_spark']['base_dir'] %>/python/lib/pyspark.zip,local://<%= node['hadoop_spark']['base_dir'] %>/python/lib/py4j-src.zip